<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="WebMatcher.MainWindow"
    Title="Web Watcher" Height="{Binding AutoHeight}"  Width="{Binding AutoWidth}" Top="{Binding AutoTop}" Left="{Binding AutoLeft}"
    MaxWidth="{Binding AutoWidth}"
    WindowStyle="None"
    ShowInTaskbar="False" Opacity="1" AllowsTransparency="True" Background="Transparent"
    Topmost="True"
    Closing="ClosingEvent"
             xmlns:local="clr-namespace:WebMatcher" Closed="Window_Closed" Unloaded="Window_Unloaded"
    >

    <!--<Window.DataContext><local:ViewModel/></Window.DataContext>-->
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </Window.Resources>


    <StackPanel  x:Name="pnl" Background="Transparent" VerticalAlignment="Bottom">
        <Grid x:Name="GrdMatchers" Height="{Binding AutoListHeight}" >
            <ListBox
            x:Name="LstMatchers"
            Margin="0,0,0,0" 
            ItemsSource="{Binding Matchers.Groups}"
            Background="#FF202040"
            BorderThickness="0"
            VerticalAlignment="Bottom"
            MaxWidth="{Binding AutoWidth}"
            Foreground="White"
                
            ScrollViewer.CanContentScroll = "false"
                
            >
                <ListBox.ItemTemplate>
                    <DataTemplate>                
                        <local:MatchersGroupView Visibility="{Binding Path=Visible, Converter={local:BollToVisibilityConverter}}" DataContext="{Binding}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                
                <ListBox.Resources>
                    <Style TargetType="Border">
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Style>
                    <Style TargetType="ListBoxItem">
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                        </Style.Resources>
                    </Style>
                </ListBox.Resources>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
        <StackPanel x:Name="pnlOptions" HorizontalAlignment="Stretch" Margin="0"  Background="Black" Visibility="Collapsed">
            <CheckBox Margin="5" VerticalAlignment="Center" IsChecked="{Binding Path=Matchers.LoadAtStartup, Mode=TwoWay}" >
                <Label Margin="0,-5" Foreground="white" Content="{StaticResource str_LoadAtStartup}"/>
            </CheckBox>
            <StackPanel Margin="0,5" Orientation="Horizontal" Height="20" >
                <Label Foreground="white" Margin="0,-5" Content="{StaticResource str_ThreadNb}"/>
                <TextBox x:Name="txtMaxNbThreads" x:FieldModifier="private" Width="50" Text="{Binding Matchers.MaxNbThreads}" />
                <StackPanel Orientation="Vertical" VerticalAlignment="Stretch">
                    <Button x:Name="cmdUp_MaxNbThreads" x:FieldModifier="private" Margin="0" Width="10" Height="10" Click="cmdUp_MaxNbThreads_Click" VerticalAlignment="Stretch"/>
                    <Button x:Name="cmdDown_MaxNbThreads" x:FieldModifier="private" Margin="0"  Width="10" Height="10" Click="cmdDown_MaxNbThreads_Click" VerticalAlignment="Stretch"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Margin="0,5" Orientation="Horizontal" Height="20" >
                <Label Foreground="white" Margin="0,-5" Content="{StaticResource str_CheckInterval}"/>
                <TextBox x:Name="txtIntervalHours" x:FieldModifier="private" Width="25" Text="{Binding Path='IntervalHours', Mode='OneWay', StringFormat='{}{0}'}" />
                <StackPanel Orientation="Vertical" VerticalAlignment="Stretch">
                    <Button x:Name="cmdUp_Hours" x:FieldModifier="private" Margin="0" Width="10" Height="10" Click="cmdUp_Hours_Click" VerticalAlignment="Stretch"/>
                    <Button x:Name="cmdDown_Hours" x:FieldModifier="private" Margin="0"  Width="10" Height="10" Click="cmdDown_Hours_Click" VerticalAlignment="Stretch"/>
                </StackPanel>
                <TextBox x:Name="txtIntervalMinutes" x:FieldModifier="private" Width="25" Text="{Binding Path='Matchers.Interval.Minutes', Mode='OneWay', StringFormat='{}{0:D2}'}" />
                <StackPanel Orientation="Vertical" VerticalAlignment="Stretch">
                    <Button x:Name="cmdUp_Minutes" x:FieldModifier="private" Margin="0" Width="10" Height="10" Click="cmdUp_Minutes_Click" VerticalAlignment="Stretch"/>
                    <Button x:Name="cmdDown_Minutes" x:FieldModifier="private" Margin="0"  Width="10" Height="10" Click="cmdDown_Minutes_Click" VerticalAlignment="Stretch"/>
                </StackPanel>
            </StackPanel>
        </StackPanel>
        <StackPanel x:Name="pnlCommands" HorizontalAlignment="Stretch" Margin="0" Background="Black">

            <ProgressBar
                    Width="Auto" 
                    Height="1"
                    Background="Black"
                    BorderThickness="0"
                    Maximum="{Binding Matchers.Count,Mode=OneWay}"   
                    Value="{Binding Matchers.CheckedCount,Mode=OneWay}" 
                >
                <ProgressBar.Foreground>
                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,1">
                        <GradientStop Color="#FF06370F" Offset="0"/>
                        <GradientStop Color="#FF229437" Offset="1"/>
                    </LinearGradientBrush>

                </ProgressBar.Foreground>
            </ProgressBar>


            <StackPanel
                Margin="8"
                Orientation="Horizontal"
                HorizontalAlignment="Right" 
                >

                <CheckBox x:Name="cmdPin"  Margin="0,0,5,0" IsChecked="{Binding Pinned}">
                    <CheckBox.Template>
                        <ControlTemplate TargetType="CheckBox">
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <Image x:Name="pin"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="pin" 
                                Property="Source" 
                                Value="{StaticResource imgUnpinned}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="pin" 
                                Property="Source"
                                Value="{StaticResource imgPinned}" />
                                </Trigger>
                            </ControlTemplate.Triggers>



                        </ControlTemplate>
                    </CheckBox.Template>
                </CheckBox>
                <CheckBox x:Name="chkViewAll" Foreground="White" Margin="0,0,15,0" IsChecked="{Binding Path=Matchers.ViewAll, Mode=TwoWay}" >
                    <CheckBox.Template>
                        <ControlTemplate TargetType="CheckBox">
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <Image x:Name="folded"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="folded" 
                                Property="Source" 
                                Value="{StaticResource imgUnfolded}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="folded" 
                                Property="Source"
                                Value="{StaticResource imgFolded}" />
                                </Trigger>
                            </ControlTemplate.Triggers>



                        </ControlTemplate>
                    </CheckBox.Template>

                </CheckBox>
                <Button x:Name="cmdCheck"  Margin="0,0,5,0" Click="cmdCheck_Click">
                    <Button.Template>
                        <ControlTemplate>
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <Image Source="{StaticResource imgWatch}"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>

                </Button>
                <Button x:Name="cmdAdd"  Margin="0,0,5,0"  Click="cmdAdd_Click" >
                    <Button.Template>
                        <ControlTemplate>
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <Image Source="{StaticResource imgAdd}"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="cmdOptions"  Margin="0,0,5,0"  Click="cmdOptions_Click">
                    <Button.Template>
                        <ControlTemplate>
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <Image Source="{StaticResource imgOptions}"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </StackPanel>
        </StackPanel>
    </StackPanel>


</Window>
